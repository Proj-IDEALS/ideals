<p style="color: green"><%= notice %></p>

<div class="flex-wrapper">

<div class="engraved" style="padding-left: 20px">
  <span>Theories</span>
</div>

<div class="list-group list-group-light">
  <% @theories.each do |theory| %>
    <%= link_to theory, :onclick => "callTheory(#{theory.id})",
                class: "list-group-item list-group-item-action px-3 border-0 ripple link" do %>
      <i class="bi bi-arrow-right-circle-fill"></i> <%= theory.name.capitalize %>
    <% end %>
  <% end %>
</div>
<!-- if in the cucumber test, show the button -->
<% if Rails.env.test? %>
  <p><%= link_to "New theory", new_theory_path %></p>
<% end %>
<!-- if in the production, show the button -->
<% if session[:userinfo].present? %>
  <p style="padding-left: 20px"><%= link_to "New theory", new_theory_path %></p>
<% end %>

<div class="d-flex justify-content-center fixed-bottom">
  <nav aria-label="Page navigation">
    <ul class="pagination">
      <% if @theories.previous_page %>
        <li class="page-item"><%= link_to 'Prev', theories_path(page: @theories.previous_page), class: 'page-link' %></li>
      <% else %>
        <li class="page-item disabled"><span class="page-link">Prev</span></li>
      <% end %>

      <% if @theories.total_pages >= 1 %>
        <% current_page = @theories.current_page %>

        <% if current_page == 1 %>
          <li class="page-item active"><span class="page-link"><%= current_page %></span></li>
        <% elsif current_page == @theories.total_pages %>
          <li class="page-item active"><span class="page-link"><%= current_page %></span></li>
        <% else %>
          <li class="page-item active"><span class="page-link"><%= current_page %></span></li>
        <% end %>
      <% end %>

      <% if @theories.next_page %>
        <li class="page-item"><%= link_to 'Next', theories_path(page: @theories.next_page), class: 'page-link' %></li>
      <% else %>
        <li class="page-item disabled"><span class="page-link">Next</span></li>
      <% end %>
    </ul>
  </nav>
</div>

</div>

<script>
    function callTheory(theoryId) {
        const label = 'theories' + theoryId;
        window.parent.fadeOutUnconnected(label);
    }

    function resetGraph() {
        window.parent.resetGraph();
    }
</script>
